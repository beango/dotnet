@model web.core.Models.ProductsModel
<div class="alert alert-error hide">

    <button class="close" data-dismiss="alert"></button>

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


</div>

<div class="control-group">

    @Html.LabelFor(model => model.ProductName, new { @class = "control-label" })

    <div class="controls">

        @Html.EditorFor(model => model.ProductName, new { @class = "span3 m-wrap" })

        @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.SupplierID, new { @class = "control-label" })

    <div class="controls">
        @Html.DropDownListFor(model => model.SupplierID, ViewBag.Suppliers as IEnumerable<SelectListItem>, "--Select--")
        @Html.ValidationMessageFor(model => model.SupplierID, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.CategoryID, new { @class = "control-label" })
    <div class="controls">
        @Html.DropDownListFor(model => model.CategoryID, ViewBag.Categories as IEnumerable<SelectListItem>, "--Select--")
        @Html.ValidationMessageFor(model => model.CategoryID, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.QuantityPerUnit, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.QuantityPerUnit, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.QuantityPerUnit, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.UnitPrice, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.UnitPrice, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.UnitPrice, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.UnitsInStock, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.UnitsInStock, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.UnitsInStock, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.UnitsOnOrder, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.UnitsOnOrder, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.UnitsOnOrder, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.ReorderLevel, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.ReorderLevel, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.ReorderLevel, null, new { @class = "help-inline" })
    </div>

</div>

<div class="control-group">

    @Html.LabelFor(model => model.Discontinued, new { @class = "control-label" })
    <div class="controls">
        @Html.EditorFor(model => model.Discontinued, new { @class = "span3 m-wrap" })
        @Html.ValidationMessageFor(model => model.Discontinued, null, new { @class = "help-inline" })
    </div>

</div>
