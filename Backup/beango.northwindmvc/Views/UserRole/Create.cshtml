@model beango.model.UserRole
@{
    ViewBag.Title = "CreateUserRole";
    var Roles = TempData["roles"] as List<beango.model.Role>;
}
<h2 style="float: left;">
    CreateUserRole UsersRole</h2>
<p style="position: relative; height: 36px;">
    @Html.ActionLink("Back to List", "List", new { userid = HttpContext.Current.Request.QueryString["userid"] }, new { style = "position:absolute; margin-left:10px; bottom:6px;" })
</p>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.form.js")" type="text/javascript"></script>
<script type="text/javascript">
    // wait for the DOM to be loaded
    $(document).ready(function () {
        var ajaxProjectImageListOptions = {
            dataType: 'json',
            success: function (result) {
                if (result.result)
                    location.href = result.desc;
                else {
                    alert(result.desc);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            }
        };
        $('form').ajaxForm(ajaxProjectImageListOptions);
    }); 
</script>
@using (Html.BeginForm("UserRoleSubmit", "UserRole", null, FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.ValidationSummary(true)

    <div class="control-group">
        <div class="control-label">
            @Html.Label("UserName")
        </div>
        <div class="controls">
            @Html.Hidden("UserID", HttpContext.Current.Request.QueryString["userid"])
            @Html.Label(TempData["UserName"].ToString())
        </div>
    </div>
    
    if (Roles != null)
    {foreach (var item in Roles)
    {
    <div class="control-group">
        
        <div class="controls">
            @Html.CheckBox("chkChecked" + item.RoleID.ToString(), Model != null && Model.RoleID == item.RoleID, new { groupname = "RoleID" })
            @Html.DisplayFor(modelItem => item.RoleName)
        </div>
    </div>
    }
    }
    <div class="form-actions">
        <button type="submit" class="btn btn-primary">
            保存更改</button>
        <button class="btn" onclick="location.href='/';return false;">
            取消</button>
    </div>
}
